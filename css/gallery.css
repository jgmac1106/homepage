:root {
	/*// We just need to know these 3 values up front:
	--gutter: 10px;
	--wrapper: calc(100vw - ( 2 * var(--gutter)));
	--noOfColumns: 2;
	
	// Number of gutters is columns minus 1:
	--noOfGutters: calc(var(--noOfColumns) - 1);

	// Aspect ratio goes here:
	--ratioA: 1;
	--ratioB: 1;

	// Use the aspect ratio to calculate the factor for multiplication:
	--factor: calc(var(--ratioB) / var(--ratioA));
	
	// Calculating the row height:
	--rh: calc(( (var(--wrapper) - (var(--noOfGutters) * var(--gutter))) 
		/ var(--noOfColumns)) * var(--factor));

	@media (min-width: 60em) {
		--wrapper: 60em;
		--gutter: 20px;
		--noOfColumns: 4;
		--ratioA: 1;
		--ratioB: 1;
	}*/

	--wrapper: calc(100vw - ( 2 * var(--gutter)));
	--numColumns: 2;
	--numGutters: calc(var(--numColumns) - 1);
	--gutter: 10px;
	--ratioA: 1;
	--ratioB: 1;
	--factor: calc(var(--ratioB) / var(--ratioA));
	/*--rh: calc((var(--wrapper) - (3 * var(--gutter))) / var(--numColumns));*/
	--rh: calc(( (var(--wrapper) - (var(--numGutters) * var(--gutter)))
  	/ var(--numColumns)) * var(--factor));

	/*We could also put the number of columns in a variable, but avoiding that here for the sake of keeping the calc() function simple*/
}

@media (min-width: 600px) {
	:root {
		--numColumns: 4;
	}
}

@media (min-width: 1100px) {
	:root {
		--wrapper: 900px;
	}
}

html {
	font-size: 62.5%;
}

body {
	margin: 0 auto;
	padding: 0;
	max-width: 90%;
	/*width: var(--wrapper);*/
	font-family: Georgia, sans-serif;
}

* {
	box-sizing: border-box;
}

h1 {
	font-size: 3rem;
	font-weight: 300;
	margin-left: 10px;
	margin-right: 10px;
}

@media (min-width: 900px) {
	h1 {
		margin-left: auto;
		margin-right: auto;
	}
}

p {
	font-size: 1.4rem;
	line-height: 1.3;
}

a {
	color: #3b5564;
	font-size: 2.5rem;
	text-decoration: none;
}

	a:hover {
		/*text-decoration: underline dotted #ccc;*/
	}


.grid {
	max-width: var(--wrapper);
	display: grid;
	/*grid-template-columns: repeat(4, 1fr);*/
	grid-template-columns: repeat(var(--numColumns), minmax(0, 1fr));;
	grid-auto-rows: var(--rh); /* minmax(var(--rh), auto); */
	/*If the content is taller then the box will grow to fit. This is only going to work if the column value is 1fr**/
	grid-gap: var(--gutter);
	margin: var(--gutter);
}

@media (min-width: 600px) {
	.grid {
		margin: var(--gutter) auto;
	}
}

.grid-item {
	display: flex;
	flex-direction: column;
	overflow: hidden;
}

	.grid-item img {
		display: block;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
.grid-item video {
		display: block;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

.grid-date {
	font-size: 1.6rem;
	color: #999;
	display: none;
	text-align: right;
	margin-top: auto;
}

.grid-item-lg {
	grid-column: span 2;
	grid-row: span 2;
}
.grid-item-ex-lg {
	grid-column: span 2;
	grid-row: span 4;
}

.grid-item-right {
	grid-column-end: 5;
}

.grid-item-db {
	grid-column: span 2;
}

.grid-item-fw {
	grid-column: span 4;
}

.grid-item-db > h1 {
  grid-row: 1;
  grid-column: 1 / -1;
}



.grid-item-db > h1 {
  grid-row: 1;
  grid-column: 1 / -1;
}
.grid-item-db figure a {
  grid-area: a;
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.grid-item-db figure img {
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.grid-item-db figure figcaption {
  align-self: end;
  background-color: rgba(255,255,255,0.7);
  font-size: 1.5em;
  grid-area: a;
  overflow: hidden; /* FIXME: allow a touch-friendly way to show captions */
  padding: 1em;
  transform: translateY(100%);
  transition: transform 0.25s ease-out;
  z-index: 1;
}
.grid-item-db > h1 {
  grid-row: 1;
  grid-column: 1 / -1;
}



.grid-item-lg > h1 {
  grid-row: 1;
  grid-column: 1 / -1;
}
.grid-item-lg figure a {
  grid-area: a;
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.grid-item-lg figure img {
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.grid-item-lg figure figcaption {
  align-self: end;
  background-color: rgba(255,255,255,0.7);
  font-size: 1.5em;
  grid-area: a;
  overflow: hidden; /* FIXME: allow a touch-friendly way to show captions */
  padding: 1em;
  transform: translateY(100%);
  transition: transform 0.25s ease-out;
  z-index: 1;
}
.grid-item-sm > h1 {
  grid-row: 1;
  grid-column: 1 / -1;
}
.grid-item-sm figure a {
  grid-area: a;
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.grid-item-sm figure img {
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.grid-item-sm figure figcaption {
  align-self: end;
  background-color: rgba(255,255,255,0.7);
  font-size: 1.5em;
  grid-area: a;
  overflow: hidden; /* FIXME: allow a touch-friendly way to show captions */
  padding: 1em;
  transform: translateY(100%);
  transition: transform 0.25s ease-out;
  z-index: 1;
}

 figure:hover figcaption {
  transform: translateY(0%);
}

.inline-svg {
  display: inline-block;
  height: 1.15em;
  width: 1.15em;
  top: 0.15rem;
  position: relative;
}